<prism:PrismApplication
    x:Class="TraceSystem.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Icon="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Material"
    xmlns:local="clr-namespace:TraceSystem"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme
                    BaseTheme="Light"
                    PrimaryColor="DeepPurple"
                    SecondaryColor="Lime" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="CustomToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignToolForeground}" />
                <Setter Property="Content" Value="{materialDesign:PackIcon Size=32, Kind=PlayCircle}" />
                <Setter Property="Width" Value="28" />
                <Setter Property="Height" Value="28" />
                <Setter Property="FontSize" Value="32" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Image
                                    x:Name="CheckName"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Source="{Icon:MaterialImage Kind=PlayPause}" />
                                <Image
                                    x:Name="UnCheckName"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Source="{Icon:MaterialImage Kind=PlayCircle}" />

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckName" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="UnCheckName" Property="Visibility" Value="Visible" />

                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="CheckName" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="UnCheckName" Property="Visibility" Value="Hidden" />

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>





            </Style>


            <Style x:Key="MyListBoxStle" TargetType="ListBoxItem">
                <Style.Setters>
                    <Setter Property="MinHeight" Value="40" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Grid>
                                    <Border x:Name="Bord1" />
                                    <Border x:Name="Bord2" />
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Bord1" Property="BorderThickness" Value="4,0,0,0" />
                                        <Setter TargetName="Bord1" Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
                                        <Setter TargetName="Bord2" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                                        <Setter TargetName="Bord2" Property="Opacity" Value="0.7" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Bord1" Property="BorderThickness" Value="4,0,0,0" />
                                        <Setter TargetName="Bord1" Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
                                        <Setter TargetName="Bord2" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                                        <Setter TargetName="Bord2" Property="Opacity" Value="0.2" />
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
            <Style x:Key="MenuListStyle" TargetType="ListBoxItem">
                <Setter Property="Height" Value="45" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#fed6ce" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="15,0,15,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#f7f6f4" />
                                    <Setter Property="Foreground" Value="#fb7657" />
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="MenuButtonIco" TargetType="Icon:PackIconMaterial">
                <Setter Property="Margin" Value="25,0,0,0" />
                <Setter Property="MinHeight" Value="40" />
                <Setter Property="Width" Value="15" />
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" />
            </Style>

            <Style x:Key="MenuButtontext" TargetType="TextBlock">
                <Setter Property="Margin" Value="20,0,0,0" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="MinWidth" Value="100" />
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" />
            </Style>



            <Style x:Key="MenuTitle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Margin" Value="40,30,0,15" />
            </Style>

            <Style x:Key="MenuButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#fed6ce" />
                <Setter Property="Height" Value="45" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="15,0,15,5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#f7f6f4" />
                        <Setter Property="Foreground" Value="#fb7657" />
                    </Trigger>
                </Style.Triggers>

            </Style>


            <SolidColorBrush x:Key="SeriesInterior1" Color="#0078DE" />
            <SolidColorBrush x:Key="SeriesInterior1WithOpacity" Color="#780078DE" />
            <SolidColorBrush x:Key="SeriesInterior2" Color="#00CC6A" />
            <SolidColorBrush x:Key="SeriesInterior2WithOpacity" Color="#7800CC6A" />
            <SolidColorBrush x:Key="SeriesInterior3" Color="#B146C2" />
            <SolidColorBrush x:Key="SeriesInterior3WithOpacity" Color="#78B146C2" />

            <Color x:Key="SeriesOneColor">#0078DE</Color>
            <Color x:Key="SeriesTwoColor">#00CC6A</Color>
            <Color x:Key="SeriesThreeColor">#B146C2</Color>
            <Color x:Key="SeriesFourColor">#FFB900</Color>
            <Color x:Key="SeriesFiveColor">#7A7574</Color>
            <Color x:Key="SeriesSixColor">#E2182F</Color>
            <Color x:Key="SeriesSevenColor">#7200E6</Color>
            <Color x:Key="SeriesEightColor">#007F00</Color>
            <Color x:Key="SeriesNineColor">#E3236F</Color>
            <Color x:Key="SeriesTenColor">#FA9901</Color>



        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>
